/*
Script Name: data_extraction.sql
Purpose: Extract and analyze data from the 'thelook_ecommerce.orders' table in BigQuery.
Author: Kittima Rodriguez
Created Date: YYYY-MM-DD
Version: 1.0
Description: 
This script retrieves and analyzes retail sales data using SQL queries. 
It counts total orders, extracts sample transactions, and identifies top-selling products.
By grouping sales by product and calculating total revenue, we determine which products perform best.
*/

-- 1️⃣ Calculate the total number of orders to assess overall sales volume.
-- This helps understand the total number of transactions processed in the dataset.
SELECT COUNT(*) AS total_orders
FROM `bigquery-public-data.thelook_ecommerce.orders`;

-- 2️⃣ Retrieve a sample of 10 sales transactions to understand the data structure and content.
-- This allows for a quick inspection of the dataset to verify data integrity and schema.
SELECT *
FROM `bigquery-public-data.thelook_ecommerce.orders`
LIMIT 10;

-- 3️⃣ Identify the top 10 best-selling products by total revenue to determine product performance.
-- We group by product_id and product_name, then calculate:
-- - COUNT(order_id): Number of orders for each product.
-- - SUM(sale_price): Total revenue generated by each product.
-- Sorting by total revenue in descending order helps us find the highest-selling items.
SELECT product_id, product_name, COUNT(order_id) AS total_orders, SUM(sale_price) AS total_revenue
FROM `bigquery-public-data.thelook_ecommerce.orders`
GROUP BY product_id, product_name
ORDER BY total_revenue DESC
LIMIT 10;

/*
Summary:
- Total Orders: [Result]
- Sample Transactions: Retrieved 10 sample records.
- Top 10 Best-Selling Products: Listed with total orders and revenue.

Next Steps:
- Perform deeper analysis on customer demographics to understand buying behavior.
- Explore sales trends over time (seasonality, daily, weekly trends).
- Investigate regional sales performance to identify high-revenue locations.
*/


